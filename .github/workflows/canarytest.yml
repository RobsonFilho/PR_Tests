name: PR Description Check

on:
  pull_request:
    types: [opened, edited]

permissions:
  pull-requests: read  # Concede permissão de leitura para Pull Requests

jobs:
  check_pr_description:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Debug - Print PR details
        run: |
          # Obtem os detalhes completos da PR
          pr_details=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}")
          
          # Imprime os detalhes completos da PR para depuração
          echo "PR Details: $pr_details"
          
          # Obtem a descrição da PR a partir dos detalhes
          pr_description=$(echo "$pr_details" | jq -r '.body')
          
          # Verifica se a descrição está vazia ou nula
          if [ -z "$pr_description" ] || [ "$pr_description" = "null" ]; then
            echo "No PR description found or description is empty."
          else
            echo "PR Description: $pr_description"
          fi

      - name: Check PR description for yellow-man
        run: |
          # Obtem a descrição da PR
          pr_description=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" | jq -r '.body')
          
          # Verifica se a descrição contém a palavra proibida, ignorando diferenças de espaços ou quebras de linha
          if echo "$pr_description" | grep -iq "yellow-man"; then
            echo "This is a canary test for our guidelines. Please, read our guidelines before proceeding with your PR."
            exit 1
          else
            echo "Thanks for reading our guidelines."
          fi
